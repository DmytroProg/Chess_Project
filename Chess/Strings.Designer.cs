//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Chess {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Strings {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Strings() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Chess.Strings", typeof(Strings).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Bishop.
        /// </summary>
        internal static string Bishop {
            get {
                return ResourceManager.GetString("Bishop", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The bishop can move diagonally like a queen, but not forward, backward, or sideways. Each side starts with two bishops, one on a light square and one on a dark square..
        /// </summary>
        internal static string BishopContent {
            get {
                return ResourceManager.GetString("BishopContent", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Black player won!.
        /// </summary>
        internal static string BlackWin {
            get {
                return ResourceManager.GetString("BlackWin", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Continue.
        /// </summary>
        internal static string Continue {
            get {
                return ResourceManager.GetString("Continue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Draw.
        /// </summary>
        internal static string Draw {
            get {
                return ResourceManager.GetString("Draw", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to King.
        /// </summary>
        internal static string King {
            get {
                return ResourceManager.GetString("King", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Chess is won by checkmating - trapping - the opponent’s king. The king can move to any square that’s directly next to it: up, down, sideways, or diagonal..
        /// </summary>
        internal static string KingContent {
            get {
                return ResourceManager.GetString("KingContent", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Knight.
        /// </summary>
        internal static string Knight {
            get {
                return ResourceManager.GetString("Knight", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The knight is the only chess piece that doesn&apos;t go in a straight line. The knight moves two squares in one direction and then turns and goes one square to the side..
        /// </summary>
        internal static string KnightContent {
            get {
                return ResourceManager.GetString("KnightContent", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to mins.
        /// </summary>
        internal static string Minutes {
            get {
                return ResourceManager.GetString("Minutes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Pawn.
        /// </summary>
        internal static string Pawn {
            get {
                return ResourceManager.GetString("Pawn", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Pawns move one square forward and cannot move back. A pawn may advance two squares on its first move. Pawns can only capture one square diagonally ahead..
        /// </summary>
        internal static string PawnContent {
            get {
                return ResourceManager.GetString("PawnContent", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Pawn Promotion.
        /// </summary>
        internal static string PawnPromotion {
            get {
                return ResourceManager.GetString("PawnPromotion", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Play.
        /// </summary>
        internal static string Play {
            get {
                return ResourceManager.GetString("Play", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to When a pawn reaches the end of the board it “promotes”, it turns into another piece. Most of the time players promote to a queen, but a rook, knight, or bishop is also possible..
        /// </summary>
        internal static string PPContent {
            get {
                return ResourceManager.GetString("PPContent", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Queen.
        /// </summary>
        internal static string Queen {
            get {
                return ResourceManager.GetString("Queen", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The queen can move forwards, backward, sideways, and diagonally like a king. However, unlike the king, the queen can move as far as it wants to in each of these directions..
        /// </summary>
        internal static string QueenContent {
            get {
                return ResourceManager.GetString("QueenContent", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Read rules.
        /// </summary>
        internal static string ReadRules {
            get {
                return ResourceManager.GetString("ReadRules", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to RULES.
        /// </summary>
        internal static string RulesHeader {
            get {
                return ResourceManager.GetString("RulesHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Rook.
        /// </summary>
        internal static string Tower {
            get {
                return ResourceManager.GetString("Tower", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The rook can move forwards, backward, and sideways..
        /// </summary>
        internal static string TowerContent {
            get {
                return ResourceManager.GetString("TowerContent", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to White player won!.
        /// </summary>
        internal static string WhiteWin {
            get {
                return ResourceManager.GetString("WhiteWin", resourceCulture);
            }
        }
    }
}
